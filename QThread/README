QThread需要注意的地方：
    1.在继承QThread的方法中，程序需要重写run()方法。
    2.在继承QObject的方法中，程序需要完成如下操作：
        1）继承QObject对象
        2）完成线程操作函数
        3）在主线程中创建自定义线程对象，此时不能指定父对象。
           否则该自定义线程对象会跟主线程的id相同。
        4）在主线程中创建QThread对象，此时可以指定父对象
        5）调用自定义线程的的moveToThread()函数，将自定义
           线程移动到QThread对象中。
        6）使用signal - slot的方式调用自定义线程的线程操作
           函数。
    3.两种创建线程的不同点：
        在第一种方式中，不需要显示的调用线程的run()函数，
        在第二种方式中，必须使用signal - slot的方式调用线程的操作函数。

QMutex的使用：
    mutex是一个互斥量，当上锁时临界区无法访问，解锁是临界区可以访问。可以
    用该方法实现线程的挂起和唤醒。


本程序存在的问题：
        由于quit函数的特性，会做完手头的任务后再结束，那么当线程被挂起时，
    临界区就被锁住了，除非解锁，不然永远不可能完成任务，那么此时就应该先解锁
    然后再跳出循环。但是，现在缺少一个确认临界区是否锁定的函数。
